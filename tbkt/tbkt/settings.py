# coding=utf-8
"""
Django settings for esms project.

Generated by 'django-admin startproject' using Django 1.8.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""
import re

import simplejson as json
import os
import logging

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
DIRNAME = os.path.dirname(__file__)
# 读取数据库配置文件
config_file = os.path.join(BASE_DIR, '.env')
DATABASES_CONFIG = ""
try:
    if os.path.isfile(config_file):
        config = open(config_file).read()
        config = json.loads(config)
        DATABASES_CONFIG = config
except Exception, ex:
    print 'load .env error=%s' % ex

DEBUG = True if DATABASES_CONFIG["DEBUG"] == 'True' else False
DB_ENGINE = 'django.db.backends.mysql'
DB_WAIT_TIMEOUT = 29  # 单个连接最长维持时间
DB_POOL_SIZE = 8  # 连接池最大连接数

DATABASES = {
    'default': {
        'ENGINE': DB_ENGINE,
        'NAME': 'tbkt_com',  # Or path to database file if using sqlite3.
        'USER': DATABASES_CONFIG['DB_HD_USER'],
        'PASSWORD': DATABASES_CONFIG['DB_HD_PASSWORD'],
        'HOST': DATABASES_CONFIG['DB_HD_MASTER_HOST'],
        'PORT': DATABASES_CONFIG['DB_HD_MASTER_PORT'],  # Set to empty string for default. Not used with sqlite3.
    },
    'slave': {
        'ENGINE': DB_ENGINE,
        'NAME': 'tbkt_com',
        'USER': DATABASES_CONFIG['DB_HD_USER'],  # Not used with sqlite3.
        'PASSWORD': DATABASES_CONFIG['DB_HD_PASSWORD'],  # Not used with sqlite3.
        'HOST': DATABASES_CONFIG['DB_HD_SLAVE_HOST'],  # Set to empty string for localhost. Not used with sqlite3.
        'PORT': DATABASES_CONFIG['DB_HD_SLAVE_PORT'],
    },

    'ketang': {
        'NAME': 'tbkt_ketang',
        'ENGINE': DB_ENGINE,
        'USER': DATABASES_CONFIG['DB_HD_USER'],
        'PASSWORD': DATABASES_CONFIG['DB_HD_PASSWORD'],
        'HOST': DATABASES_CONFIG['DB_HD_MASTER_HOST'],
        'PORT': DATABASES_CONFIG['DB_HD_MASTER_PORT'],
    },
    'ketang_slave': {
        'NAME': 'tbkt_ketang',
        'ENGINE': DB_ENGINE,
        'USER': DATABASES_CONFIG['DB_HD_USER'],
        'PASSWORD': DATABASES_CONFIG['DB_HD_PASSWORD'],
        'HOST': DATABASES_CONFIG['DB_HD_SLAVE_HOST'],
        'PORT': DATABASES_CONFIG['DB_HD_SLAVE_PORT'],
    },
    'ziyuan': {
        'NAME': 'ziyuan_new',
        'ENGINE': DB_ENGINE,
        'USER': DATABASES_CONFIG['DB_ZIYUAN_USER'],  # Not used with sqlite3.
        'PASSWORD': DATABASES_CONFIG['DB_ZIYUAN_PASSWORD'],  # Not used with sqlite3.
        'HOST': DATABASES_CONFIG['DB_ZIYUAN_MASTER_HOST'],
        'PORT': DATABASES_CONFIG['DB_ZIYUAN_MASTER_PORT'],
    },
    'ziyuan_slave': {
        'NAME': 'ziyuan_new',
        'ENGINE': DB_ENGINE,
        'USER': DATABASES_CONFIG['DB_ZIYUAN_USER'],
        'PASSWORD': DATABASES_CONFIG['DB_ZIYUAN_PASSWORD'],
        'HOST': DATABASES_CONFIG['DB_ZIYUAN_SLAVE_HOST'],
        'PORT': DATABASES_CONFIG['DB_ZIYUAN_SLAVE_PORT'],
    },
    'tbkt_user': {
        'NAME': 'tbkt_user',
        'ENGINE': DB_ENGINE,
        'USER': DATABASES_CONFIG['DB_HD_USER'],  # Not used with sqlite3.
        'PASSWORD': DATABASES_CONFIG['DB_HD_PASSWORD'],  # Not used with sqlite3.
        'HOST': DATABASES_CONFIG['DB_HD_MASTER_HOST'],
        'PORT': DATABASES_CONFIG['DB_HD_MASTER_PORT'],
        # 'CONN_MAX_AGE': 30,
        'OPTIONS': {
        },
    },
    'tbkt_user_slave': {
        'NAME': 'tbkt_user',
        'ENGINE': DB_ENGINE,
        'USER': DATABASES_CONFIG['DB_HD_USER'],
        'PASSWORD': DATABASES_CONFIG['DB_HD_PASSWORD'],
        'HOST': DATABASES_CONFIG['DB_HD_SLAVE_HOST'],
        'PORT': DATABASES_CONFIG['DB_HD_SLAVE_PORT'],
        # 'CONN_MAX_AGE': 30,
        'OPTIONS': {
        },
    },
    'tbkt_web': {
        'ENGINE': DB_ENGINE,
        'NAME': 'tbkt_web',  # Or path to database file if using sqlite3.
        'USER': DATABASES_CONFIG['DB_HD_USER'],
        'PASSWORD': DATABASES_CONFIG['DB_HD_PASSWORD'],
        'HOST': DATABASES_CONFIG['DB_HD_MASTER_HOST'],
        'PORT': DATABASES_CONFIG['DB_HD_MASTER_PORT'],  # Set to empty string for default. Not used with sqlite3.
    },
    'tbkt_web_slave': {
        'ENGINE': DB_ENGINE,
        'NAME': 'tbkt_web',  # Or path to database file if using sqlite3.
        'USER': DATABASES_CONFIG['DB_HD_USER'],
        'PASSWORD': DATABASES_CONFIG['DB_HD_PASSWORD'],
        'HOST': DATABASES_CONFIG['DB_HD_SLAVE_HOST'],
        'PORT': DATABASES_CONFIG['DB_HD_SLAVE_PORT'],  # Set to empty string for default. Not used with sqlite3.
    },
    'tbkt_active': {
        'ENGINE': DB_ENGINE,
        'NAME': 'tbkt_active',  # Or path to database file if using sqlite3.
        'USER': DATABASES_CONFIG['DB_HD_USER'],
        'PASSWORD': DATABASES_CONFIG['DB_HD_PASSWORD'],
        'HOST': DATABASES_CONFIG['DB_HD_MASTER_HOST'],
        'PORT': DATABASES_CONFIG['DB_HD_MASTER_PORT'],  # Set to empty string for default. Not used with sqlite3.
    },
    'tbkt_active_slave': {
        'ENGINE': DB_ENGINE,
        'NAME': 'tbkt_active',  # Or path to database file if using sqlite3.
        'USER': DATABASES_CONFIG['DB_HD_USER'],
        'PASSWORD': DATABASES_CONFIG['DB_HD_PASSWORD'],
        'HOST': DATABASES_CONFIG['DB_HD_SLAVE_HOST'],
        'PORT': DATABASES_CONFIG['DB_HD_SLAVE_PORT'],  # Set to empty string for default. Not used with sqlite3.
    },
    'tbkt_gift_active': {
        'ENGINE': DB_ENGINE,
        'NAME': 'tbkt_gift_active',  # Or path to database file if using sqlite3.
        'USER': DATABASES_CONFIG['DB_HD_USER'],
        'PASSWORD': DATABASES_CONFIG['DB_HD_PASSWORD'],
        'HOST': DATABASES_CONFIG['DB_HD_MASTER_HOST'],
        'PORT': DATABASES_CONFIG['DB_HD_MASTER_PORT'],  # Set to empty string for default. Not used with sqlite3.
    },
    'tbkt_gift_active_slave': {
        'ENGINE': DB_ENGINE,
        'NAME': 'tbkt_gift_active',
        'USER': DATABASES_CONFIG['DB_HD_USER'],  # Not used with sqlite3.
        'PASSWORD': DATABASES_CONFIG['DB_HD_PASSWORD'],  # Not used with sqlite3.
        'HOST': DATABASES_CONFIG['DB_HD_SLAVE_HOST'],  # Set to empty string for localhost. Not used with sqlite3.
        'PORT': DATABASES_CONFIG['DB_HD_SLAVE_PORT'],
    },
    'tbkt_yw': {
        'NAME': 'tbkt_yw',  # 语文资源
        'ENGINE': DB_ENGINE,
        'USER': DATABASES_CONFIG['DB_YW_ZIYUAN_APP_USER'],  # Not used with sqlite3.
        'PASSWORD': DATABASES_CONFIG['DB_YW_ZIYUAN_APP_PASSWORD'],  # Not used with sqlite3.
        'HOST': DATABASES_CONFIG['DB_YW_ZIYUAN_APP_MASTER_HOST'],  # Set to empty string for localhost. Not used with sqlite3.
        'PORT': DATABASES_CONFIG['DB_YW_ZIYUAN_APP_PORT'],
    },
    'tbkt_yw_slave': {
        'NAME': 'tbkt_yw',  # 语文资源
        'ENGINE': DB_ENGINE,
        'USER': DATABASES_CONFIG['DB_YW_ZIYUAN_APP_USER'],  # Not used with sqlite3.
        'PASSWORD': DATABASES_CONFIG['DB_YW_ZIYUAN_APP_PASSWORD'],  # Not used with sqlite3.
        'HOST': DATABASES_CONFIG['DB_YW_ZIYUAN_APP_SLAVE_HOST'],  # Set to empty string for localhost. Not used with sqlite3.
        'PORT': DATABASES_CONFIG['DB_YW_ZIYUAN_APP_PORT'],
    },
    'tbkt_yuwen': {
        'NAME': 'tbkt_yuwen',  # 语文用户记录表
        'ENGINE': DB_ENGINE,
        'USER': DATABASES_CONFIG['DB_HD_USER'],  # Not used with sqlite3.
        'PASSWORD': DATABASES_CONFIG['DB_HD_PASSWORD'],  # Not used with sqlite3.
        'HOST': DATABASES_CONFIG['DB_HD_SLAVE_HOST'],  # Set to empty string for localhost. Not used with sqlite3.
        'PORT': DATABASES_CONFIG['DB_HD_SLAVE_PORT'],
    },
    'tbkt_yuwen_slave': {
        'NAME': 'tbkt_yuwen',  # 语文用户记录表
        'ENGINE': DB_ENGINE,
        'USER': DATABASES_CONFIG['DB_HD_USER'],  # Not used with sqlite3.
        'PASSWORD': DATABASES_CONFIG['DB_HD_PASSWORD'],  # Not used with sqlite3.
        'HOST': DATABASES_CONFIG['DB_HD_SLAVE_HOST'],  # Set to empty string for localhost. Not used with sqlite3.
        'PORT': DATABASES_CONFIG['DB_HD_SLAVE_PORT'],
    },

    'tbkt_shuxue': {
        'ENGINE': DB_ENGINE,
        'NAME': 'tbkt_shuxue',  # Or path to database file if using sqlite3.
        'USER': DATABASES_CONFIG['DB_HD_USER'],
        'PASSWORD': DATABASES_CONFIG['DB_HD_PASSWORD'],
        'HOST': DATABASES_CONFIG['DB_HD_MASTER_HOST'],
        'PORT': DATABASES_CONFIG['DB_HD_MASTER_PORT'],  # Set to empty string for default. Not used with sqlite3.
    },
    'tbkt_shuxue_slave': {
        'ENGINE': DB_ENGINE,
        'NAME': 'tbkt_shuxue',  # Or path to database file if using sqlite3.
        'USER': DATABASES_CONFIG['DB_HD_USER'],
        'PASSWORD': DATABASES_CONFIG['DB_HD_PASSWORD'],
        'HOST': DATABASES_CONFIG['DB_HD_SLAVE_HOST'],
        'PORT': DATABASES_CONFIG['DB_HD_SLAVE_PORT'],  # Set to empty string for default. Not used with sqlite3.
    },
    'tbkt_yingyu': {
        'ENGINE': DB_ENGINE,
        'NAME': 'tbkt_yingyu',  # Or path to database file if using sqlite3.
        'USER': DATABASES_CONFIG['DB_HD_USER'],
        'PASSWORD': DATABASES_CONFIG['DB_HD_PASSWORD'],
        'HOST': DATABASES_CONFIG['DB_HD_SLAVE_HOST'],
        'PORT': DATABASES_CONFIG['DB_HD_SLAVE_PORT'],  # Set to empty string for default. Not used with sqlite3.
        # 'CONN_MAX_AGE': DB_WAIT_TIMEOUT,
        'OPTIONS': {
            # 'autocommit': True
        },
    },
    'tbkt_yingyu_slave': {
        'NAME': 'tbkt_yingyu',
        'ENGINE': 'django.db.backends.mysql',
        'USER': DATABASES_CONFIG['DB_HD_USER'],  # Not used with sqlite3.
        'PASSWORD': DATABASES_CONFIG['DB_HD_PASSWORD'],  # Not used with sqlite3.
        'HOST': DATABASES_CONFIG['DB_HD_SLAVE_HOST'],  # Set to empty string for localhost. Not used with sqlite3.
        'PORT': DATABASES_CONFIG['DB_HD_SLAVE_PORT'],
    },
}

# DATABASE_ROUTERS = ['com.router.MyAppRouter']

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

ALLOWED_HOSTS = ['*']

# WSGI_APPLICATION = 'wsgi.application'

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Etc/GMT-8'

USE_I18N = True

USE_L10N = True

# USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

TBKTURLROOT = 'http://192.168.0.128:8010'

STATIC_URL = '/static/'

# 文件上传目录
MEDIA_ROOT = os.path.join(BASE_DIR, 'upload/')

# 静态文件路径
MEDIA_SITE = os.path.join(BASE_DIR, 'site_media/')

# 动态模板文件
THEME_SITE = os.path.join(BASE_DIR, 'templates/')

# 静态模板
STATIC_SITE = os.path.join(BASE_DIR, "statictage")

APIDOC_DIR = os.path.join(BASE_DIR, 'apidoc/')

# # 文件上传密钥
# FILE_UPLOAD_SECRET = DATABASES_CONFIG['FILE_UPLOAD_KEY']
# # 文件上传服务器(只保留两天以内的文件)
# FILE_UPLOAD_URLROOT = DATABASES_CONFIG['FILE_UPLOAD_URLROOT']
# # 永久文件服务器(两天以后同步到CDN)
# FILE_URLROOT = DATABASES_CONFIG['FILE_URLROOT']
# # 视频文件服务器
# FLV_WEB_URLROOT = DATABASES_CONFIG['FILE_FLV_URLROOT']
FILE_WEB_URLROOT = DATABASES_CONFIG['FILE_URLROOT']


# 文件上传密钥
FILE_UPLOAD_SECRET = DATABASES_CONFIG['FILE_UPLOAD_KEY']

# 文件上传服务器(只保留两天以内的文件)
FILE_UPLOAD_URLROOT = DATABASES_CONFIG['FILE_UPLOAD_URLROOT']

# 两天内的文件服务器地址
FILE_VIEW_URLROOT = DATABASES_CONFIG['FILE_VIEW_URLROOT']

# 两天以后文件服务器的地址:
FILE_VIEW2_URLROOT = DATABASES_CONFIG['FILE_VIEW2_URLROOT']

# 视频文件服务器
FLV_WEB_URLROOT = DATABASES_CONFIG['FILE_FLV_URLROOT']

# 本站
# URLROOT = DATABASES_CONFIG['']
# 公共数据接口
COM_API_DJ_URLROOT = DATABASES_CONFIG["DOMAIN_API_COM_API_DJ_URLROOT"]
# 支付接口
BANK_API_DJ_URLROOT = DATABASES_CONFIG["DOMAIN_API_BANK_API_DJ_URLROOT"]
# 短信接口
SMS_API_DJ_URLROOT = DATABASES_CONFIG["DOMAIN_API_SMS_API_DJ_URLROOT"]
# 公共user
USER_WEB_DJ_URLROOT = DATABASES_CONFIG["DOMAIN_WEB_USER_WEB_DJ_URLROOT"]

FILE_MEDIA_URLROOT = DATABASES_CONFIG["FILE_MEDIA_URLROOT"]
# 内网地址
TBKT_HOST = DATABASES_CONFIG["TBKT_COM_INNER_HOST"]

# MEDIA_URLROOT = DATABASES_CONFIG['FILE_URLROOT']
APP = 'media_app'
DIR = 'media'
VERSION = "1.0"
# MEDIA_DISTURL = MEDIA_URLROOT + '/' + DIR


# 同步课堂自制cookie
SESSION_COOKIE_NAME = 'tbkt_token'
SECRET_KEY = '240897'
SESSION_COOKIE_AGE = int(DATABASES_CONFIG["TBKT_COM_SESSION_COOKIE_AGE"])
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
SESSION_COOKIE_DOMAIN = None

MIDDLEWARE_CLASSES = (
    'tbkt.middleware.AuthenticationMiddleware',
)

INSTALLED_APPS = (
)
ROOT_URLCONF = 'tbkt.urls'

REDIS_HOST = DATABASES_CONFIG['REDIS_HOST']
REDIS_PORT = DATABASES_CONFIG['REDIS_PORT']
REDIS_PASSWORD = DATABASES_CONFIG['REDIS_PASSWORD']
REDIS_DB = DATABASES_CONFIG['REDIS_DB']

# 缓存配置(公共接口不要禁用缓存)
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': ["%s:%s" % (DATABASES_CONFIG['CACHE_MEM_HOST'], DATABASES_CONFIG['CACHE_MEM_PORT'])],
    }
}

# 公共缓存key统一管理
CACHE_KEYS = {}
for k, v in DATABASES_CONFIG.items():
    if k.startswith('CACHE_KEY_COM_'):
        try:
            alias = k[14:].lower()
            rows = v.split('|')
            realkey = rows[0]
            timeout = int(rows[1])
            CACHE_KEYS[alias] = {'realkey': realkey, 'timeout': timeout}
        except:
            pass
    if k.startswith('CACHE_KEY_HD_'):
        try:
            alias = k[10:].lower()
            rows = v.split('|')
            realkey = rows[0]
            timeout = int(rows[1])
            CACHE_KEYS[alias] = {'realkey': realkey, 'timeout': timeout}
        except:
            pass

# 默认使用哪种密码哈希算法
PASSWORD_ALGORITHM = 'sha1'  # pbkdf2

logging.basicConfig(level=logging.WARNING,
                    format='APP: %(asctime)s %(name)s %(levelname)s %(filename)s[line:%(lineno)d func:%(funcName)s] %(message)s',
                    datefmt='%Y-%m-%d %H:%M:%S',
                    filemode='w')
# logging.basicConfig(level=logging.INFO,
#                     format='APP: %(asctime)s %(name)-12s %(levelname)-8s %(message)s',
#                     datefmt='%Y-%m-%d %H:%M:%S',
#                     filemode='w')
CACHES = {
   'default': {
      'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
      'LOCATION': '/var/tmp/django_cache',
   }
}


# 接口URLROOT字典
API_URLROOT = {}
for k, v in DATABASES_CONFIG.iteritems():
    m = re.match(r'DOMAIN_API_(\w+)_API_DJ_URLROOT', k)
    if m:
        alias = m.groups()[0].lower()
        API_URLROOT[alias] = v
